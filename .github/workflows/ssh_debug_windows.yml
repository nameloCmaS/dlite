name: CI Windows MinGW

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  push:

jobs:
  build:
    name: Github Windows MinGW64
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Setup MSYS2
        id: msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          release: false
          path-type: inherit
          pacboy: >-
            python:p
            python-argon2_cffi:p
            python-cffi:p
            python-numpy:p
            python-pandas:p
            python-paramiko:p
            python-pip:p
            python-pyarrow:p
            python-pydantic-core:p
            python-rdflib:p
            python-yaml:p
            cmake:p
            gcc:p
            hdf5:p
            swig:p
            libxml2:p
            libxslt:p

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          which python3
          python3 --version

          # --system-site-packages allows the venv to use
          # pacman installed packages which won't compile
          # on MinGW without patching. Some runner images have
          # a locked install requiring a venv.
          python3 -m venv --system-site-packages venv
          source venv/bin/activate
          
          # due to the way packages are installed in both
          # the base MinGW Python install for compiled packages
          # and the remaining platform independant packages are
          # installed to the venv, the paths Python uses get mixed
          # up, so we give a hint with the below env var.
          # a ._pth file may work instead. The env var
          # __PYVENV_LAUNCHER__ should also work (and is better documented).
          echo "PYTHONEXECUTABLE=$VIRTUAL_ENV/bin/python3.exe" >> $GITHUB_ENV

          # Need to ensure utf-8 mode on Windows
          echo "PYTHONIOENCODING=utf-8" >> $GITHUB_ENV
          echo "PYTHONUTF8=1" >> $GITHUB_ENV

          python3 -m pip install --upgrade pip
          python3 -m pip --version

          python3 -m pip install -U setuptools wheel

          # requirements.txt is omitted as only contains numpy.
          # This needs to be and is installed by pacman.
          python3 -m pip install -r requirements_full.txt

          # Note: Uses MinGW versions of dev tools for building
          # instead: cmake and swig. Thus requirements_dev.txt is not used.


      - name: Check numpy
        run: |
          source venv/bin/activate
          python3 -c 'import numpy as np; print(np.get_include())'

      - name: List installed Python packages
        run: |
          source venv/bin/activate
          uname -a
          python --version
          pip3 freeze

      - name: Configure
        env:
          DLITE_IMPORTSKIP_EXITCODE: 1
          CMAKE_LIBRARY_PATH: ${{ steps.msys2.outputs.msys2-location }}
        run: |
          source venv/bin/activate
          cmake -B build . \
            -DFORCE_EXAMPLES=ON \
            -DWITH_FORTRAN=YES \
            -DPython3_FIND_STRATEGY=LOCATION \
            -DPython3_ROOT_DIR=$(python3 -c 'import sys; print(sys.exec_prefix)') \
            -DCMAKE_Fortran_COMPILER=gfortran \
            -G "MinGW Makefiles"

      - name: Build
        run: |
          source ../venv/bin/activate
          cmake --build .
        working-directory: build

      - name: Install
        run: |
          source ../venv/bin/activate
          cmake --install .
        working-directory: build

      - name: Test
        env:
          DLITE_PYDEBUG: ""
        run: |
          source ../venv/bin/activate
          ctest || ctest --rerun-failed --output-on-failure -V
        working-directory: build

      - name: Test with all behavior changes disabled
        env:
          DLITE_BEHAVIOR: OFF
        run: |
          source ../venv/bin/activate
          ctest || ctest --rerun-failed --output-on-failure -V
        working-directory: build

      - name: Test with all behavior changes enabled
        env:
          DLITE_BEHAVIOR: ON
        run: |
          source ../venv/bin/activate
          ctest || ctest --rerun-failed --output-on-failure -V
        working-directory: build

      - name: Build wheel
        run: |
          source venv/bin/activate
          python3 -m pip wheel -w dist ./python

      - name: Install python package and test the installation
        run: |
          source venv/bin/activate
          python3 -m pip install --user dist/*.whl
          python3 bindings/python/tests/__main__.py

      - uses: mxschmitt/action-tmate@v3
        if: failure()
